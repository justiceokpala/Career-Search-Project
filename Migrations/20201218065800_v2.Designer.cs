// <auto-generated />
using System;
using Career_Search_Project.Areas.Admin.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Career_Search_Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201218065800_v2")]
    partial class v2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.FunctionalArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FunctionalAreas");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.Industry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.JobEmployer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FoundedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("IndustryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("TopJobId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId1")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.HasIndex("TopJobId");

                    b.HasIndex("UserId1");

                    b.ToTable("JobEmployers");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.JobInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AgeLimit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FunctionalAreaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IndustryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JobEmployerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobSummary")
                        .HasColumnType("TEXT");

                    b.Property<int>("JobTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Qualification")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Renumeration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Requirements")
                        .HasColumnType("TEXT");

                    b.Property<string>("Responsibility")
                        .HasColumnType("TEXT");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalAreaId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("JobEmployerId");

                    b.HasIndex("JobTypeId");

                    b.ToTable("JobInformations");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.JobSeeker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactInformation")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExperienceLevel")
                        .HasColumnType("TEXT");

                    b.Property<int>("FunctionalAreaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Qualification")
                        .HasColumnType("TEXT");

                    b.Property<string>("Skills")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId1")
                        .HasColumnType("TEXT");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalAreaId");

                    b.HasIndex("UserId1");

                    b.ToTable("JobSeekers");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.JobType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contract")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("PartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Temporary")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("JobTypes");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.TopJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AgeLimit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FunctionalAreaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IndustryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobSummary")
                        .HasColumnType("TEXT");

                    b.Property<int>("JobTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Qualification")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Renumeration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Requirements")
                        .HasColumnType("TEXT");

                    b.Property<string>("Responsibility")
                        .HasColumnType("TEXT");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalAreaId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("JobTypeId");

                    b.ToTable("TopJobs");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tel")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserRegistrations");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.WalkIn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FunctionalAreaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IndustryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InterviewLocation")
                        .HasColumnType("TEXT");

                    b.Property<int>("JobEmployerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobName")
                        .HasColumnType("TEXT");

                    b.Property<int>("JobTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalAreaId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("JobEmployerId");

                    b.HasIndex("JobTypeId");

                    b.ToTable("WalkIns");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.JobEmployer", b =>
                {
                    b.HasOne("Career_Search_Project.Areas.Admin.Models.Industry", "Industry")
                        .WithMany("JobEmployer")
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Career_Search_Project.Areas.Admin.Models.TopJob", "TopJob")
                        .WithMany("JobEmployers")
                        .HasForeignKey("TopJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Career_Search_Project.Areas.Admin.Models.User", "User")
                        .WithMany("Employer")
                        .HasForeignKey("UserId1");

                    b.Navigation("Industry");

                    b.Navigation("TopJob");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.JobInformation", b =>
                {
                    b.HasOne("Career_Search_Project.Areas.Admin.Models.FunctionalArea", "FunctionalArea")
                        .WithMany("jobInformation")
                        .HasForeignKey("FunctionalAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Career_Search_Project.Areas.Admin.Models.Industry", "Industry")
                        .WithMany("JobInformation")
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Career_Search_Project.Areas.Admin.Models.JobEmployer", "JobEmployers")
                        .WithMany("JobInformations")
                        .HasForeignKey("JobEmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Career_Search_Project.Areas.Admin.Models.JobType", "JobType")
                        .WithMany("JobInformations")
                        .HasForeignKey("JobTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalArea");

                    b.Navigation("Industry");

                    b.Navigation("JobEmployers");

                    b.Navigation("JobType");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.JobSeeker", b =>
                {
                    b.HasOne("Career_Search_Project.Areas.Admin.Models.FunctionalArea", "FunctionalArea")
                        .WithMany("JobSeekers")
                        .HasForeignKey("FunctionalAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Career_Search_Project.Areas.Admin.Models.User", "User")
                        .WithMany("JobSeekers")
                        .HasForeignKey("UserId1");

                    b.Navigation("FunctionalArea");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.TopJob", b =>
                {
                    b.HasOne("Career_Search_Project.Areas.Admin.Models.FunctionalArea", "FunctionalArea")
                        .WithMany()
                        .HasForeignKey("FunctionalAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Career_Search_Project.Areas.Admin.Models.Industry", "Industry")
                        .WithMany()
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Career_Search_Project.Areas.Admin.Models.JobType", "JobType")
                        .WithMany("TopJobs")
                        .HasForeignKey("JobTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalArea");

                    b.Navigation("Industry");

                    b.Navigation("JobType");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.WalkIn", b =>
                {
                    b.HasOne("Career_Search_Project.Areas.Admin.Models.FunctionalArea", "FunctionalArea")
                        .WithMany("WalkIns")
                        .HasForeignKey("FunctionalAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Career_Search_Project.Areas.Admin.Models.Industry", "Industry")
                        .WithMany("WalkIns")
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Career_Search_Project.Areas.Admin.Models.JobEmployer", "JobEmployer")
                        .WithMany("WalkIns")
                        .HasForeignKey("JobEmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Career_Search_Project.Areas.Admin.Models.JobType", "JobType")
                        .WithMany("WalkIns")
                        .HasForeignKey("JobTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalArea");

                    b.Navigation("Industry");

                    b.Navigation("JobEmployer");

                    b.Navigation("JobType");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.FunctionalArea", b =>
                {
                    b.Navigation("jobInformation");

                    b.Navigation("JobSeekers");

                    b.Navigation("WalkIns");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.Industry", b =>
                {
                    b.Navigation("JobEmployer");

                    b.Navigation("JobInformation");

                    b.Navigation("WalkIns");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.JobEmployer", b =>
                {
                    b.Navigation("JobInformations");

                    b.Navigation("WalkIns");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.JobType", b =>
                {
                    b.Navigation("JobInformations");

                    b.Navigation("TopJobs");

                    b.Navigation("WalkIns");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.TopJob", b =>
                {
                    b.Navigation("JobEmployers");
                });

            modelBuilder.Entity("Career_Search_Project.Areas.Admin.Models.User", b =>
                {
                    b.Navigation("Employer");

                    b.Navigation("JobSeekers");
                });
#pragma warning restore 612, 618
        }
    }
}
